services:

  nginx:
    container_name: front_nginx
    image: nginx
    volumes:
      - certloc:/etc/letsencrypt:ro
      - challengeloc:/var/www/letsencrypt
      - ./Front/nginx/conf.d/default.conf:/etc/nginx/nginx.conf

    restart: unless-stopped
  
    ports:
      - "80:80"
      - "443:443"


  certbot:
    container_name: front_certbot
    image: certbot/certbot
    volumes:
      - certloc:/etc/letsencrypt:rw
      - challengeloc:/var/www/letsencrypt
      - ./Front/certbot/entrypoint.sh:/entrypoint.sh
    entrypoint: ["/bin/sh", "/entrypoint.sh"]
    restart: unless-stopped


  backend:
    container_name: backend_server
    build: ./Back/Server
    volumes:
      - ./Back/Server:/app
      - /app/node_modules
    depends_on:
      - DB

  ai:
    container_name: ai_server
    build: ./Back/AI
    volumes:
      - ./Back/AI:/app
  

  front:
    container_name: front_server
    build: ./Front/web
    volumes:
      - ./Front/web:/app
      - /app/node_modules


  DB:
    container_name: pscheck_db
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: root
      LANG: C.UTF-8
      TZ: Asia/Seoul

    volumes:
      - app_data:/var/lib/mysql
      - ./DB/init.sql:/docker-entrypoint-initdb.d/init.sql


volumes:
  certloc:
  challengeloc:
  app_data:
